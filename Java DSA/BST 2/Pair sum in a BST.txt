import java.util.*;
public class Solution {
	
	public static void printNodesSumToS(BinaryTreeNode<Integer> root, int s) {
		
		if (root==null)
            return;
        else {

            ArrayList<Integer> arr = convertToArray(root);
        	Collections.sort(arr);
    
        	printPairSum(arr,s);
        }    
	}
    private static ArrayList<Integer> convertToArray(BinaryTreeNode<Integer> root) {

        if (root==null)
        {
            ArrayList<Integer> arr = new ArrayList<Integer>();
            return arr;
        }
        
        ArrayList<Integer> currArr = new ArrayList<Integer>();
        ArrayList<Integer> leftArr = convertToArray(root.left);
        if (!leftArr.isEmpty()) {

            currArr.addAll(leftArr);
        }
        
        currArr.add(root.data);
        
        ArrayList<Integer> rightArr = convertToArray(root.right);
        if (!rightArr.isEmpty()) {

            currArr.addAll(rightArr);
        }
        return currArr;
    }
    
    private static void printPairSum(ArrayList<Integer> arr, int s) {

        int i=0,j=arr.size()-1;
        while(i<j) {

            int val1=arr.get(i);
            int val2=arr.get(j);
            if (val1+val2>s) {

                j=j-1;
            }
            else if(val1+val2<s) {

                i=i+1;
            }
            else {

                System.out.println(val1+" "+val2);
                i=i+1;
                j=j-1;
            }       
        }
	}
}